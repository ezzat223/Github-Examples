name: Redis and DB service example
on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis:latest
        ports:
          - 6379:6379   # Expose Redis port on the VM
        options: 
            --health-cmd="redis-cli ping" 
            --health-interval=5s 
            --health-timeout=5s 
            --health-retries=3
      db:
        image: ghcr.io/octocat/testdb:latest
        ports:
          - 5432:5432   # Expose DB port
        credentials:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Wait for Redis to be ready
        run: |
          until docker exec redis redis-cli ping | grep -q PONG; do
            echo "Waiting for Redis to be ready..."
            sleep 5
          done
        shell: bash
      - name: Test Redis connection
        run: |
          docker exec redis redis-cli set mykey "Hello, Redis!"
          docker exec redis redis-cli get mykey
